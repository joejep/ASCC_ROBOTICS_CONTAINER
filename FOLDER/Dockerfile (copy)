FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu20.04
RUN apt-key adv --fetch-keys "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub"
RUN apt-get update && apt-get install -y sudo wget kmod
ARG nvidia_binary_version="520.61.05"
ARG DEBIAN_FRONTEND=noninteractive
#https://us.download.nvidia.com/tesla/520.61.05/NVIDIA-Linux-x86_64-520.61.05.run
ARG nvidia_binary="NVIDIA-Linux-x86_64-${nvidia_binary_version}.run"
RUN wget -q https://us.download.nvidia.com/tesla/${nvidia_binary_version}/${nvidia_binary}
RUN chmod +x ${nvidia_binary}
RUN ./${nvidia_binary} --accept-license --ui=none --no-kernel-module --no-questions &&  rm -rf ${nvidia_binary}
RUN apt-get update


RUN apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \
    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.UTF-8


RUN apt update; apt install -y gnupg2
RUN apt-get -y update; apt-get -y install curl
#
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu focal main" > /etc/apt/sources.list.d/ros-latest.list'

RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc |apt-key add -
RUN apt update && \
    apt install -y \
        python-tk \
        build-essential \
        ros-noetic-joy \
        ros-noetic-tf2-sensor-msgs \
        ros-noetic-rosbash \
        ros-noetic-rviz \
        ros-noetic-teleop-twist-joy \
        ros-noetic-teleop-twist-keyboard \
        ros-noetic-laser-proc \
        ros-noetic-rgbd-launch \
        ros-noetic-depthimage-to-laserscan \
        ros-noetic-rosserial-arduino \
        ros-noetic-rosserial-python \
        ros-noetic-rosserial-server \
        ros-noetic-rosserial-client \
        ros-noetic-rosserial-msgs \
        ros-noetic-amcl \
        ros-noetic-map-server \
        ros-noetic-move-base \
        ros-noetic-urdf \
        ros-noetic-robot-state-publisher \
        ros-noetic-xacro \
        ros-noetic-compressed-image-transport \
        ros-noetic-rqt-image-view \
        ros-noetic-gmapping \
        ros-noetic-navigation \
        ros-noetic-interactive-markers \
        tmux wget nano


RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        software-properties-common \
        git \
        build-essential \
        libglew-dev\
        cmake \
        wget\
        libeigen3-dev \
        ros-noetic-hector-trajectory-server \
        python3-catkin-tools \
        libopencv-dev && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean


#RUN pip install rospkg empy
WORKDIR /home/eiyike/ASCC_WS_PROJECT

##INSTALL PANGOLIN
RUN git clone https://github.com/stevenlovegrove/Pangolin.git && \
    cd Pangolin && \
    mkdir build && cd build && \
    cmake .. && \
    make -j && \
    make install
    
    
RUN mkdir -p /ASCC_WS_PROJECT/src  


RUN apt-get update

# Clone ORB_SLAM3 ROS repository
RUN git clone https://github.com/thien94/orb_slam3_ros.git src/orb_slam3_ros



RUN apt-get update && apt-get install -y \
    libpango1.0-dev \
    libxmu-dev \
    libxi-dev



RUN /bin/bash -c "source /opt/ros/noetic/setup.bash && catkin config --extend /opt/ros/noetic && catkin build orb_slam3_ros"


SHELL ["/bin/bash", "-c"]


RUN apt-get install -y wget && rm -rf /var/lib/apt/lists/*

RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean --all --yes && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

# Set the PATH to include Conda
ENV PATH /opt/conda/bin:$PATH





# install RealSenseSDK / RealSense ROS wrapper
#
#INSTALL REALSENSE



RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
RUN add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -sc) main"

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    	ros-noetic-rviz\
        libssl-dev \
        libudev-dev \
        libusb-1.0-0-dev \
        librealsense2-dev \
        librealsense2-utils \
        ros-noetic-realsense2-camera &&  \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean
    
    
RUN apt-get update && apt-get install -y git


RUN  git clone -b ros1 https://github.com/javieryu/nerf_bridge.git &&\
    cd nerf_bridge &&\
    sudo rm -rf nerfstudio
    
RUN apt-get update
    


# Create and activate the Conda environment
RUN conda create -y --name nerfstudio python=3.8 && \
    echo "conda activate nerfstudio" >> ~/.bashrc



#  Source environmects
RUN echo "source /oct/ros/noetic/setup.bash" >> /root/.bashrc && \
    echo "source /catkin_ws/devel/setup.bash" >> /root/.bashrc

SHELL  ["/bin/bash", "-c"]
# Cleanup
RUN rm -rf /root/.cache

# Entrypoint

COPY . .
ADD entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT [ "/entrypoint.sh" ]
